/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/*!**************************************!*\
  !*** ./resources/js/parties/game.js ***!
  \**************************************/
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar messageDiv = $('#message');\nvar messagesDiv = $('#chat_messages');\nvar showGrid = $('#showGrid');\n$('.ajaxChatForm').submit(function (e) {\n  e.preventDefault();\n  $.ajax({\n    url: route,\n    type: 'POST',\n    data: 'message=' + messageDiv.val() + '&party_id=' + id + '&_token=' + $('input[name=\"_token\"]').val(),\n    dataType: 'html'\n  });\n  messageDiv.val(\"\");\n  document.getElementById(\"chat\").scrollTo(0, document.getElementById(\"chat\").scrollHeight);\n});\n\nfunction getChat() {\n  var xhr = new XMLHttpRequest();\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) saveChat(xhr.response);\n  };\n\n  xhr.open('GET', route2.replace(\"TOCHANGE\", $(\"#chat_messages\").children().length - 1 + \"\"));\n  xhr.responseType = 'json';\n  xhr.send();\n}\n\nfunction saveChat(json) {\n  if (JSON.stringify(json).length > 2) {\n    if (localStorage.getItem(\"chat\")) {\n      if (localStorage.getItem(\"chat\") !== JSON.stringify(json)) {\n        localStorage.setItem(\"chat\", JSON.stringify(json));\n        showChat();\n      }\n    } else {\n      localStorage.setItem(\"chat\", JSON.stringify(json));\n      showChat();\n    }\n  }\n}\n\nfunction showChat() {\n  var messages = JSON.parse(localStorage.getItem(\"chat\"));\n\n  for (var i = messages.length - 1; i >= 0; i--) {\n    addChatElement(messages[i]);\n  }\n\n  document.getElementById(\"chat\").scrollTo(0, document.getElementById(\"chat\").scrollHeight);\n}\n\nfunction addChatElement(jsonLine) {\n  var regex = /^\\/msg\\s(\\S*)\\s(.*)$/gm;\n  var str = jsonLine[\"message\"];\n  var un = (\"@\" + jsonLine[\"username\"] + \"#\" + jsonLine[\"id\"]).toLowerCase();\n\n  if (jsonLine[\"type\"] === \"chat\") {\n    if (str.match(regex)) {\n      (function () {\n        var m;\n        var value = [];\n\n        while ((m = regex.exec(str)) !== null) {\n          if (m.index === regex.lastIndex) regex.lastIndex++;\n          m.forEach(function (match) {\n            return value.push(match);\n          });\n        }\n\n        var item = \"<div class=\\\"no-gutters row justify-content-between media mx-2 mb-3\\\">\".concat(parseInt(userID) !== jsonLine['id'] ? \"<div class=\\\"col-auto align-self-end order-1\\\">\" + (jsonLine[\"isGM\"] ? \"<div class=\\\"row no-gutters\\\"> <div class=\\\"col-auto align-self-end p-0\\\"> <img src=\\\"\" + gm + \"\\\" class=\\\" ml-1 mr-1\" + \" icon\\\" alt='avatar'></div></div>\" : \"\") + \"<div class=\\\"row no-gutters\\\"> <div class=\\\"col-auto align-self-end p-0\\\"><img src=\\\"\" + jsonLine[\"pp\"] + \"\\\" class=\\\"ml-1 mr-1 rounded-circle icon\\\" alt=\\\"\" + un + \"\\\"></div></div></div>\" : \"\").concat(parseInt(userID) === jsonLine['id'] ? \"<div class=\\\"col-auto align-self-end order-3\\\">\" + (jsonLine[\"isGM\"] ? \"<div class=\\\"row no-gutters\\\"> <div class=\\\"col-auto align-self-end p-0\\\"> <img src=\\\"\" + gm + \"\\\" class=\\\" ml-1 mr-1\" + \" icon\\\" alt='avatar'></div></div>\" : \"\") + \"<div class=\\\"row no-gutters\\\"> <div class=\\\"col-auto align-self-end p-0\\\"> <img src=\\\"\" + jsonLine[\"pp\"] + \"\\\" class=\\\"ml-1 mr-1 rounded-circle icon\\\" alt=\\\"\" + un + \"\\\"></div></div></div>\" : \"\", \"<div class=\\\"col order-2 mb-2\\\"><div class=\\\"private\").concat(parseInt(userID) === jsonLine['id'] ? \" self \" : \" other \", \"\\\"><div class=\\\"media-body p-2\\\"><h6 class=\\\"mt-0 font-weight-bold\\\">\").concat(value[1].toLowerCase() === un ? \"De\" : \"Ã€\", \" \").concat(value[1], \"</h6><p class='mb-0'>\").concat(value[2], \"</p></div></div></div></div>\");\n        $(item).appendTo(messagesDiv);\n      })();\n    } else {\n      var item = \"<div class=\\\"no-gutters row justify-content-between media mx-2 mb-3\\\">\".concat(parseInt(userID) !== jsonLine['id'] ? \"<div class=\\\"col-auto align-self-end order-1\\\">\" + (jsonLine[\"isGM\"] ? \"<div class=\\\"row no-gutters\\\"> <div class=\\\"col-auto align-self-end p-0\\\"> <img src=\\\"\" + gm + \"\\\" class=\\\" ml-1 mr-1\" + \" icon\\\" alt='avatar'></div></div>\" : \"\") + \"<div class=\\\"row no-gutters\\\"> <div class=\\\"col-auto align-self-end p-0\\\"><img src=\\\"\" + jsonLine[\"pp\"] + \"\\\" class=\\\"ml-1 mr-1 rounded-circle icon\\\" alt=\\\"\" + un + \"\\\"></div></div></div>\" : \"\").concat(parseInt(userID) === jsonLine['id'] ? \"<div class=\\\"col-auto align-self-end order-3\\\">\" + (jsonLine[\"isGM\"] ? \"<div class=\\\"row no-gutters\\\"> <div class=\\\"col-auto align-self-end p-0\\\"> <img src=\\\"\" + gm + \"\\\" class=\\\" ml-1 mr-1\" + \" icon\\\" alt='avatar'></div></div>\" : \"\") + \"<div class=\\\"row no-gutters\\\"> <div class=\\\"col-auto align-self-end p-0\\\"> <img src=\\\"\" + jsonLine[\"pp\"] + \"\\\" class=\\\"ml-1 mr-1 rounded-circle icon\\\" alt=\\\"\" + un + \"\\\"></div></div></div>\" : \"\", \"<div class=\\\"col order-2 mb-2\\\"><div class=\\\"\").concat(parseInt(userID) === jsonLine['id'] ? \" self \" : \" other \", \"\\\"><div class=\\\"media-body\\\"><h6 class=\\\"mt-0 font-weight-bold\\\">\").concat(un, \"</h6><p class='mb-0'>\").concat(jsonLine[\"message\"], \"</p></div></div></div></div>\");\n      $(item).appendTo(messagesDiv);\n    }\n  } else if (jsonLine['type'] === \"action\") {\n    var result = JSON.parse(jsonLine['data']);\n\n    var _item = \"<div class=\\\"media information py-1 pt-3 px-2\\\"><img src=\\\"../img/Dice.svg\\\" class=\\\"mr-3 rounded-circle icon\\\" alt=\\\"#\\\"><div class=\\\"media-body\\\">\" + \"<h6 class=\\\"mt-0 font-weight-bold\\\">\" + (jsonLine['action'] === \"dice\" ? \"LancÃ© de dÃ©s de \" + un : \"\") + \"</h6>\" + \"<p style=\\\"line-height: 1rem\\\">Voici le r\\xE9sultat du lanc\\xE9 (\".concat(result['info']['rollNumber'], \"x\").concat(result['info']['rollValue'], \" faces) :</p>\") + \"<ul class=\\\"pl-3\\\">\";\n\n    for (var i = 0; i < result['info']['rollNumber']; i++) {\n      _item += \"<li>Lanc\\xE9 \".concat(i + 1, \" : \").concat(result['result'][i], \" </li>\");\n    }\n\n    _item += \"</ul></div></div>\";\n    $(_item).appendTo(messagesDiv);\n  }\n}\n\nwindow.openPopup = function (route) {\n  var w = screen.availWidth * 0.8,\n      h = screen.availHeight * 0.8,\n      l = 0,\n      t = 0;\n  window.open(route, \"window\", \"width= \" + w + \",height=\" + h + \",left=\" + l + \",top=\" + t + \", scrollbars = yes, location = no, toolbar = no, menubar = no, status = no\");\n  return false;\n};\n\nwindow.addEventListener('load', function () {\n  if (localStorage.getItem(\"chat\")) localStorage.removeItem(\"chat\");\n  getChat();\n  setInterval(getChat, 200);\n});\nvar joinModal = $('#joinModal');\njoinModal.modal('show');\njoinModal.on('hidden.bs.modal', function () {\n  window.location.href = home;\n});\n\nObject.size = function (obj) {\n  var size = 0,\n      key;\n\n  for (key in obj) {\n    if (obj.hasOwnProperty(key)) size++;\n  }\n\n  return size;\n};\n\n$('#rollDice').submit(function (e) {\n  e.preventDefault();\n  $.post(route_rollDice, $('#rollDice').serialize());\n  $('#modal-rollDice').modal('hide');\n});\n\nfunction showBoard(data) {\n  localStorage.setItem(\"data\", JSON.stringify(data));\n  board.html(\"\");\n  var bnh = data.box.number_per_height,\n      //Nombre de boite sur la hauteur\n  bs = board.height() / bnh,\n      //Taille de la boite par rapport a la hauteur\n  bnw = board.width() / bs; //Nombre de boite sur la longueur\n\n  board.append($('<canvas id=\"canvas\" style=\"position: absolute;\"></canvas>'));\n  var c = document.getElementById(\"canvas\");\n  var ctx = c.getContext(\"2d\");\n  c.style.zIndex = data.box.index;\n  c.width = board.width();\n  c.height = board.height();\n  if (!data.box.visible) c.style.display = \"none\";\n  if (data.box.visible) showGrid.prop(\"checked\", true);\n  ctx.lineWidth = data.box.grid_line_width;\n\n  for (var i = 1; i < bnh; i++) {\n    ctx.beginPath();\n    ctx.moveTo(0, i * bs);\n    ctx.lineTo(c.width, i * bs);\n    ctx.stroke();\n  }\n\n  for (var _i = 1; _i < bnw; _i++) {\n    ctx.beginPath();\n    ctx.moveTo(_i * bs, 0);\n    ctx.lineTo(_i * bs, c.height);\n    ctx.stroke();\n  }\n\n  function hockey(n) {\n    var a = bnh / board.height();\n    var b = bnh - a * board.height();\n    return Math.round(a * n + b);\n  }\n\n  function curling(n) {\n    var a = bnw / board.width();\n    var b = bnw - a * board.width();\n    return Math.round(a * n + b);\n  }\n\n  var BoardElement = /*#__PURE__*/function () {\n    function BoardElement(x, y, imgURL, index, width, height, visible, name, type, key) {\n      _classCallCheck(this, BoardElement);\n\n      this.x = x;\n      this.y = y;\n      this.imgURL = imgURL;\n      this.index = index;\n      this.width = width;\n      this.height = height;\n      this.visible = visible;\n      this.name = name;\n      this.type = type;\n      this.key = key;\n    }\n\n    _createClass(BoardElement, [{\n      key: \"toImage\",\n      value: function toImage() {\n        var el = document.createElement(\"img\");\n        el.setAttribute('src', this.imgURL);\n        el.setAttribute('alt', this.name);\n        el.id = this.type + \"-\" + this.key;\n        el.style.zIndex = this.index;\n        el.style.top = this.y * bs + \"px\";\n        el.style.left = this.x * bs + \"px\";\n        el.width = this.width * bs;\n        el.height = this.height * bs;\n        el.dataset.type = this.type;\n        if (!this.visible) if (!isGM) el.style.display = 'none';else el.style.opacity = '0.2';\n        return el;\n      }\n    }, {\n      key: \"append\",\n      value: function append() {\n        board.append(this.toImage());\n      }\n    }]);\n\n    return BoardElement;\n  }();\n\n  var ControllableToken = /*#__PURE__*/function (_BoardElement) {\n    _inherits(ControllableToken, _BoardElement);\n\n    var _super = _createSuper(ControllableToken);\n\n    function ControllableToken(x, y, imgURL, index, width, height, visible, name, key) {\n      _classCallCheck(this, ControllableToken);\n\n      return _super.call(this, x, y, imgURL, index, width, height, visible, name, \"tokens\", key);\n    }\n\n    _createClass(ControllableToken, [{\n      key: \"dragElement\",\n      value: function dragElement(el) {\n        var pos1 = 0,\n            pos2 = 0,\n            pos3 = 0,\n            pos4 = 0;\n        el.onmousedown = dragMouseDown;\n\n        function dragMouseDown(e) {\n          e.preventDefault();\n          pos3 = e.clientX;\n          pos4 = e.clientY;\n          document.onmouseup = closeDragElement;\n          document.onmousemove = elementDrag;\n        }\n\n        function elementDrag(e) {\n          e.preventDefault();\n          pos1 = pos3 - e.clientX;\n          pos2 = pos4 - e.clientY;\n          pos3 = e.clientX;\n          pos4 = e.clientY;\n          el.style.top = el.offsetTop - pos2 + \"px\";\n          el.style.left = el.offsetLeft - pos1 + \"px\";\n        }\n\n        function closeDragElement() {\n          el.style.top = hockey(el.offsetTop) * bs + \"px\";\n          if (hockey(el.offsetTop) < 0) el.style.top = 0 + \"px\";\n          if (curling(el.offsetTop) >= bnh) el.style.top = (bnh - 1) * bs + \"px\";\n          el.style.left = curling(el.offsetLeft) * bs + \"px\";\n          if (curling(el.offsetLeft) < 0) el.style.left = 0 + \"px\";\n          if (curling(el.offsetLeft) > bnw) el.style.left = (bnw - 1) * bs + \"px\";\n          document.onmouseup = null;\n          document.onmousemove = null;\n        }\n      }\n    }, {\n      key: \"append\",\n      value: function append() {\n        board.append(this.toImage());\n        this.dragElement(document.getElementById(this.type + \"-\" + this.key));\n      }\n    }]);\n\n    return ControllableToken;\n  }(BoardElement);\n\n  Object.entries(data.boards).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        element = _ref2[1];\n\n    var el = new BoardElement(element.x, element.y, element.source, element.index, element.width, element.height, element.visible, element.name, \"boards\", key);\n    el.append();\n  });\n  Object.entries(data.props).forEach(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        element = _ref4[1];\n\n    var el = new BoardElement(element.x, element.y, element.source, element.index, element.width, element.height, element.visible, element.name, \"props\", key);\n    el.append();\n  });\n  Object.entries(data.tokens).forEach(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        key = _ref6[0],\n        element = _ref6[1];\n\n    var el = new ControllableToken(element.x, element.y, element.source, element.index, element.width, element.height, element.visible, element.name, key);\n    el.append();\n  });\n}\n\nfunction getBoard() {\n  $.get(route_getBoard, function (data) {\n    if (!window.localStorage.getItem('data')) {\n      showBoard(JSON.parse(data));\n    }\n  });\n}\n\ngetBoard();\n$(window).resize(function () {\n  getBoard();\n});\n\nwindow.getBoardEX = function () {\n  localStorage.removeItem('data');\n  getBoard();\n};\n\nwindow.addEventListener('load', function () {\n  localStorage.removeItem('data');\n  setInterval(getBoard, 2500);\n});\nshowGrid.change(function () {\n  if (this.checked) {\n    $('#canvas').css('display', 'unset');\n  } else {\n    $('#canvas').css('display', 'none');\n  }\n});\n$('#delete-element').click(function () {\n  var el = document.getElementById(editElement.attr(\"data-id\"));\n  el.parentNode.removeChild(el);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/parties/game.js\n");
/******/ })()
;